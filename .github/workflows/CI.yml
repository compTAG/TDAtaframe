name: CI

on:
  push:
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
on:
  push:
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux-cuda:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
  
      - name: Set Script Permissions
        run: sudo chmod +x .github/workflows/install_libtorch_linux_cuda.sh
  
      - name: Install libtorch
        run: .github/workflows/install_libtorch_linux_cuda.sh
  
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          LIBTORCH: /usr/local/libtorch
          LD_LIBRARY_PATH: /usr/local/libtorch/lib:$LD_LIBRARY_PATH
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          rust-toolchain: nightly
          sccache: 'true'
          manylinux: auto
  
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-cuda
          path: dist
  
  linux-cpu:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
  
      - name: Set Script Permissions
        run: sudo chmod +x .github/workflows/install_libtorch_linux_cpu.sh
  
      - name: Install libtorch
        run: .github/workflows/install_libtorch_linux_cpu.sh
  
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          LIBTORCH: /usr/local/libtorch
          LD_LIBRARY_PATH: /usr/local/libtorch/lib:$LD_LIBRARY_PATH
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          rust-toolchain: nightly
          sccache: 'true'
          manylinux: auto
  
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}-cpu
          path: dist

  # windows-cpu:
  #   runs-on: ${{ matrix.platform.runner }}
  #   strategy:
  #     matrix:
  #       platform:
  #         - runner: windows-latest
  #           target: x64
  #         - runner: windows-latest
  #           target: x86
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #         architecture: ${{ matrix.platform.target }}
  #     - name: Build wheels
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         target: ${{ matrix.platform.target }}
  #         args: --release --out dist
  #         rust-toolchain: nightly
  #         sccache: 'true'
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-windows-${{ matrix.platform.target }}
  #         path: dist
  #
  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install LibTorch
        run: .github/workflows/install_libtorch_macsilicon.sh
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          rust-toolchain: nightly
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist
  #
  # sdist:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Build sdist
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         command: sdist
  #         args: --out dist
  #         rust-toolchain: nightly
  #     - name: Upload sdist
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: wheels-sdist
  #         path: dist
  #
  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [sdist]
  #   steps:
  #     - uses: actions/download-artifact@v4
  #     - name: Publish to PyPI
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --non-interactive --skip-existing wheels-*/*
