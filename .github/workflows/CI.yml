name: CI

on:
  push:
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux-cuda:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        platform:
          - x86_64
          - x86
          - aarch64
          - armv7
    steps:
      - uses: actions/checkout@v4
      
      - name: Install nightly Rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly

      - name: Set up Rust toolchain and dependencies
        run: source $HOME/.cargo/env

      - name: Install unzip
        run: yum install -y unzip curl

      - name: Download and extract LibTorch
        run: |
          curl -L https://download.pytorch.org/libtorch/cu124/libtorch-cxx11-abi-shared-with-deps-2.4.0%2Bcu124.zip -o libtorch.zip
          unzip -o libtorch.zip -d $(pwd)
          rm libtorch.zip
          echo "LIBTORCH=$(pwd)/libtorch" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Python maturin and build wheels
        run: |
          source $HOME/.cargo/env
          export LIBTORCH=$(pwd)/libtorch
          export LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH
          for PYBIN in /opt/python/cp3[6789]*/bin; do
            "${PYBIN}/pip" install maturin
            "${PYBIN}/maturin" build -m Cargo.toml -i "${PYBIN}/python" --release --manylinux 2014
          done
      
      - name: Auditwheel repair
        run: |
          for wheel in target/wheels/*.whl; do
              auditwheel repair "${wheel}" --plat manylinux2014_${{ matrix.platform }}
          done

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform }}-cuda
          path: target/wheels

  linux-cpu:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        platform:
          - x86_64
          - x86
          - aarch64
          - armv7
    steps:
      - uses: actions/checkout@v4
      
      - name: Install nightly Rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly

      - name: Set up Rust toolchain and dependencies
        run: source $HOME/.cargo/env

      - name: Install unzip
        run: yum install -y unzip curl

      - name: Download and extract LibTorch
        run: |
          curl -L https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-2.4.0.zip -o libtorch.zip
          unzip -o libtorch.zip -d $(pwd)
          rm libtorch.zip
          echo "LIBTORCH=$(pwd)/libtorch" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Python maturin and build wheels
        run: |
          source $HOME/.cargo/env
          export LIBTORCH=$(pwd)/libtorch
          export LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH
          for PYBIN in /opt/python/cp3[6789]*/bin; do
            "${PYBIN}/pip" install maturin
            "${PYBIN}/maturin" build -m Cargo.toml -i "${PYBIN}/python" --release --manylinux 2014
          done
      
      - name: Auditwheel repair
        run: |
          for wheel in target/wheels/*.whl; do
              auditwheel repair "${wheel}" --plat manylinux2014_${{ matrix.platform }}
          done

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform }}-cpu
          path: target/wheels

  macos:
    runs-on: macos-14
    strategy:
      matrix:
        platform:
          - aarch64
    steps:
      - uses: actions/checkout@v4
      
      - name: Install nightly Rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
        
      - name: Install LibTorch
        run: .github/workflows/install_libtorch_macos.sh
         
      - name: Set environment variables
        run: |
          echo "LIBTORCH=$(pwd)/libtorch" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      
      - name: Install Python maturin and build wheels
        run: |
          source $HOME/.cargo/env
          export LIBTORCH=$(pwd)/libtorch
          export LD_LIBRARY_PATH=$(pwd)/libtorch/lib:$LD_LIBRARY_PATH
          pip install maturin
          maturin build -m Cargo.toml --release
        
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform }}
          path: target/wheels
